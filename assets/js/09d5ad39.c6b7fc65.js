"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),d=s,m=p["".concat(l,".").concat(d)]||p[d]||b[d]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:s,i[1]=o;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4381:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var r=t(7462),s=(t(7294),t(3905));const a={id:"examples",title:"Examples",sidebar_label:"Examples"},i=void 0,o={unversionedId:"examples",id:"examples",title:"Examples",description:"Docusaurus + GitHub Actions",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",draft:!1,tags:[],version:"current",frontMatter:{id:"examples",title:"Examples",sidebar_label:"Examples"},sidebar:"someSidebar",previous:{title:"Run to Publish",permalink:"/docs/run"}},l={},u=[{value:"Docusaurus + GitHub Actions",id:"docusaurus--github-actions",level:2},{value:"plugins.sbt",id:"pluginssbt",level:3},{value:"build.sbt",id:"buildsbt",level:3},{value:"GitHub Actions",id:"github-actions",level:3}],c={toc:u};function p(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"docusaurus--github-actions"},"Docusaurus + GitHub Actions"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Project\nRoot \u2500\u252c\u2500 project\n      \u251c\u2500 src\n      \u251c\u2500 ... more directories\n      \u2514\u2500 website\u2500\u252c\u2500 blog\n                 \u251c\u2500 docs\n                 \u251c\u2500 build <== Contains website files\n                 \u251c\u2500 node_modules\n                 \u2514\u2500 ... more directories\n")),(0,s.kt)("h3",{id:"pluginssbt"},"plugins.sbt"),(0,s.kt)("p",null,"In the ",(0,s.kt)("inlineCode",{parentName:"p"},"project/plugins.sbt")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sbt"},'addSbtPlugin("io.kevinlee" % "sbt-github-pages" % "0.14.0")\n')),(0,s.kt)("h3",{id:"buildsbt"},"build.sbt"),(0,s.kt)("p",null,"In ",(0,s.kt)("inlineCode",{parentName:"p"},"build.sbt"),","),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scala"},'lazy val root = (project in file("."))\n  .enablePlugins(GitHubPagesPlugin)\n  .settings(\n    name := "YOUR_PROJECT",\n    gitHubPagesOrgName := "USERNAME_OR_ORG",\n    gitHubPagesRepoName := "YOUR_PROJECT",\n    gitHubPagesSiteDir := baseDirectory.value / "path/to/github-pages-root"\n  )\n')),(0,s.kt)("h3",{id:"github-actions"},"GitHub Actions"),(0,s.kt)("p",null,"In your GitHub Actions config file,"),(0,s.kt)("p",null,"e.g.) ",(0,s.kt)("inlineCode",{parentName:"p"},".github/workflows/publish-github-pages.yml")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Publish GitHub Pages\n\non:\n  workflow_dispatch:\n\njobs:\n  build_and_publish_doc_site:\n    if: github.ref != 'refs/heads/gh-pages' && github.ref != 'gh-pages'\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        scala:\n          - { binary-version: \"2.12\", java-version: \"adopt@1.11\" }\n\n    steps:\n      - uses: actions/checkout@v2.3.4\n      - uses: olafurpg/setup-scala@v10\n        with:\n          java-version: ${{ matrix.scala.java-version }}\n      - uses: actions/setup-node@v2.1.5\n        with:\n          node-version: '14.4.0'\n          registry-url: 'https://registry.npmjs.org'\n\n      - name: Cache SBT\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.ivy2/cache\n            ~/.cache/coursier\n            ~/.sbt\n          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}\n          restore-keys: |\n            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-\n\n      - name: Cache npm\n        uses: actions/cache@v2\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n          restore-keys: |\n            ${{ runner.os }}-node-\n\n      - name: Build and publish website using Docusaurus\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          cd website\n          echo \"> Install packages\"\n          npm install\n          echo \"> Build the website using Docusaurus\"\n          rm -Rf build\n          npm run build\n          cd ..\n          echo \"> Publish to GitHub Pages\"\n          sbt publishToGitHubPages\n\n")),(0,s.kt)("p",null,"Pushing to ",(0,s.kt)("inlineCode",{parentName:"p"},"publish-docs")," branch triggers the publish build in GitHub Actions."))}p.isMDXComponent=!0}}]);