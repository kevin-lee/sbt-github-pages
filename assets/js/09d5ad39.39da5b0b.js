"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),b=l(t),d=s,m=b["".concat(u,".").concat(d)]||b[d]||p[d]||i;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,a=new Array(i);a[0]=b;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},4381:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var r=t(7462),s=t(3366),i=(t(7294),t(3905)),a=["components"],o={id:"examples",title:"Examples",sidebar_label:"Examples"},u=void 0,l={unversionedId:"examples",id:"examples",title:"Examples",description:"Docusaurus + GitHub Actions",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",tags:[],version:"current",frontMatter:{id:"examples",title:"Examples",sidebar_label:"Examples"},sidebar:"someSidebar",previous:{title:"Run to Publish",permalink:"/docs/run"}},c={},p=[{value:"Docusaurus + GitHub Actions",id:"docusaurus--github-actions",level:2},{value:"plugins.sbt",id:"pluginssbt",level:3},{value:"build.sbt",id:"buildsbt",level:3},{value:"GitHub Actions",id:"github-actions",level:3}],b={toc:p};function d(e){var n=e.components,t=(0,s.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"docusaurus--github-actions"},"Docusaurus + GitHub Actions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Project\nRoot \u2500\u252c\u2500 project\n      \u251c\u2500 src\n      \u251c\u2500 ... more directories\n      \u2514\u2500 website\u2500\u252c\u2500 blog\n                 \u251c\u2500 docs\n                 \u251c\u2500 build <== Contains website files\n                 \u251c\u2500 node_modules\n                 \u2514\u2500 ... more directories\n")),(0,i.kt)("h3",{id:"pluginssbt"},"plugins.sbt"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"project/plugins.sbt")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sbt"},'addSbtPlugin("io.kevinlee" % "sbt-github-pages" % "0.8.1")\n')),(0,i.kt)("h3",{id:"buildsbt"},"build.sbt"),(0,i.kt)("p",null,"In ",(0,i.kt)("inlineCode",{parentName:"p"},"build.sbt"),","),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'lazy val root = (project in file("."))\n  .enablePlugins(GitHubPagesPlugin)\n  .settings(\n    name := "YOUR_PROJECT",\n    gitHubPagesOrgName := "USERNAME_OR_ORG",\n    gitHubPagesRepoName := "YOUR_PROJECT",\n    gitHubPagesSiteDir := baseDirectory.value / "path/to/github-pages-root"\n  )\n')),(0,i.kt)("h3",{id:"github-actions"},"GitHub Actions"),(0,i.kt)("p",null,"In your GitHub Actions config file,"),(0,i.kt)("p",null,"e.g.) ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/publish-github-pages.yml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Publish GitHub Pages\n\non:\n  workflow_dispatch:\n\njobs:\n  build_and_publish_doc_site:\n    if: github.ref != 'refs/heads/gh-pages' && github.ref != 'gh-pages'\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        scala:\n          - { binary-version: \"2.12\", java-version: \"adopt@1.11\" }\n\n    steps:\n      - uses: actions/checkout@v2.3.4\n      - uses: olafurpg/setup-scala@v10\n        with:\n          java-version: ${{ matrix.scala.java-version }}\n      - uses: actions/setup-node@v2.1.5\n        with:\n          node-version: '14.4.0'\n          registry-url: 'https://registry.npmjs.org'\n\n      - name: Cache SBT\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.ivy2/cache\n            ~/.cache/coursier\n            ~/.sbt\n          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}\n          restore-keys: |\n            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-\n\n      - name: Cache npm\n        uses: actions/cache@v2\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n          restore-keys: |\n            ${{ runner.os }}-node-\n\n      - name: Build and publish website using Docusaurus\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          cd website\n          echo \"> Install packages\"\n          npm install\n          echo \"> Build the website using Docusaurus\"\n          rm -Rf build\n          npm run build\n          cd ..\n          echo \"> Publish to GitHub Pages\"\n          sbt publishToGitHubPages\n\n")),(0,i.kt)("p",null,"Pushing to ",(0,i.kt)("inlineCode",{parentName:"p"},"publish-docs")," branch triggers the publish build in GitHub Actions."))}d.isMDXComponent=!0}}]);