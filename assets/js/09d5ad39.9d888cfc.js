"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[864],{1498:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=s(4848),t=s(8453);const a={id:"examples",title:"Examples",sidebar_label:"Examples"},r=void 0,o={id:"examples",title:"Examples",description:"Docusaurus + GitHub Actions",source:"@site/docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"examples",title:"Examples",sidebar_label:"Examples"},sidebar:"someSidebar",previous:{title:"Run to Publish",permalink:"/docs/run"}},u={},c=[{value:"Docusaurus + GitHub Actions",id:"docusaurus--github-actions",level:2},{value:"plugins.sbt",id:"pluginssbt",level:3},{value:"build.sbt",id:"buildsbt",level:3},{value:"GitHub Actions",id:"github-actions",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"docusaurus--github-actions",children:"Docusaurus + GitHub Actions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Project\nRoot \u2500\u252c\u2500 project\n      \u251c\u2500 src\n      \u251c\u2500 ... more directories\n      \u2514\u2500 website\u2500\u252c\u2500 blog\n                 \u251c\u2500 docs\n                 \u251c\u2500 build <== Contains website files\n                 \u251c\u2500 node_modules\n                 \u2514\u2500 ... more directories\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pluginssbt",children:"plugins.sbt"}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"project/plugins.sbt"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sbt",children:'addSbtPlugin("io.kevinlee" % "sbt-github-pages" % "0.14.0")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"buildsbt",children:"build.sbt"}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"build.sbt"}),","]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'lazy val root = (project in file("."))\n  .enablePlugins(GitHubPagesPlugin)\n  .settings(\n    name := "YOUR_PROJECT",\n    gitHubPagesOrgName := "USERNAME_OR_ORG",\n    gitHubPagesRepoName := "YOUR_PROJECT",\n    gitHubPagesSiteDir := baseDirectory.value / "path/to/github-pages-root"\n  )\n'})}),"\n",(0,i.jsx)(n.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,i.jsx)(n.p,{children:"In your GitHub Actions config file,"}),"\n",(0,i.jsxs)(n.p,{children:["e.g.) ",(0,i.jsx)(n.code,{children:".github/workflows/publish-github-pages.yml"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"name: Publish GitHub Pages\n\non:\n  workflow_dispatch:\n\njobs:\n  build_and_publish_doc_site:\n    if: github.ref != 'refs/heads/gh-pages' && github.ref != 'gh-pages'\n\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        scala:\n          - { binary-version: \"2.12\", java-version: \"adopt@1.11\" }\n\n    steps:\n      - uses: actions/checkout@v2.3.4\n      - uses: olafurpg/setup-scala@v10\n        with:\n          java-version: ${{ matrix.scala.java-version }}\n      - uses: actions/setup-node@v2.1.5\n        with:\n          node-version: '14.4.0'\n          registry-url: 'https://registry.npmjs.org'\n\n      - name: Cache SBT\n        uses: actions/cache@v2\n        with:\n          path: |\n            ~/.ivy2/cache\n            ~/.cache/coursier\n            ~/.sbt\n          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}\n          restore-keys: |\n            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-\n\n      - name: Cache npm\n        uses: actions/cache@v2\n        with:\n          path: ~/.npm\n          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n          restore-keys: |\n            ${{ runner.os }}-node-\n\n      - name: Build and publish website using Docusaurus\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          cd website\n          echo \"> Install packages\"\n          npm install\n          echo \"> Build the website using Docusaurus\"\n          rm -Rf build\n          npm run build\n          cd ..\n          echo \"> Publish to GitHub Pages\"\n          sbt publishToGitHubPages\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Pushing to ",(0,i.jsx)(n.code,{children:"publish-docs"})," branch triggers the publish build in GitHub Actions."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);