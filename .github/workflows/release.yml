name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { version: "2.12.12", binary-version: "2.12", java-version: "adopt@1.8", sbt-version: "1.4.9" }

    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.scala.java-version }}

    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

    - name: sbt GitHub Release sbt-github-pages
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
      run: |
        echo "======================="
        echo "Run] sbt GitHub release"
        echo "-----------------------"
        echo 'sbt -J-Xmx2048m ++${{ matrix.scala.version }}! ^^${{ matrix.scala.sbt-version }} devOopsGitHubRelease'
        sbt -J-Xmx2048m \
          ++${{ matrix.scala.version }}! \
          ^^${{ matrix.scala.sbt-version }} \
          devOopsGitHubRelease

  publish:
    needs: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { version: "2.12.12", binary-version: "2.12", java-version: "8", sbt-version: "1.3.13" }

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.scala.java-version }}

    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

    - name: sbt Publish sbt-github-pages
      env:
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
      run: |
        echo "Run] sbt publish for Scala ${{ matrix.scala.version }}"
        echo 'sbt -J-Xmx2048m ++${{ matrix.scala.version }}! ^^${{ matrix.scala.sbt-version }} -v clean publish"'
        sbt -J-Xmx2048m \
          ++${{ matrix.scala.version }}! \
          ^^${{ matrix.scala.sbt-version }} \
          -v \
          clean \
          publish
        echo "====================="
